@model Visual.Models.ClientesViewModel

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            @Html.LabelFor(model => model.vNombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vNombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vNombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vApellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vApellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vApellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vApelldo2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vApelldo2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vApelldo2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vContra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vContra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vContra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.iEdad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.iEdad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.iEdad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_direccion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_direccion, new List<SelectListItem> { new SelectListItem { Text = "colombia bogota", Value = "1" }, 
               new SelectListItem { Text = "costarica Sanjose", Value = "2" },
               new SelectListItem { Text = "Argentina buenos aires", Value = "4" },
               new SelectListItem { Text = "chile Santiago", Value = "5" },
           new SelectListItem { Text = "panama david", Value = "3" } 
           })


            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.vCorreo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vCorreo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vCorreo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

